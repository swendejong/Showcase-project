@{
    ViewData["Title"] = "Register - Wordle";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="~/css/login.css"> <!-- Link to your CSS file -->
</head>
<body>

<theme-switcher></theme-switcher>

<!-- Register Container -->
<div class="login-container">
    <div class="login-form">
        <h2 class="login-title">Create an Account</h2>

        <!-- Register Form -->
        @using (Html.BeginForm("Register", "Wordle", FormMethod.Post))
        {
            <!-- Username Field -->
            <input type="text" class="login-input" placeholder="Username" name="Username" required/>

            <!-- Email Field -->
            <input type="email" class="login-input" placeholder="Email" name="Email" required/>

            <!-- Password Field -->
            <input type="password" class="login-input" placeholder="Password" name="Password" required/>

            <!-- Confirm Password Field -->
            <input type="password" class="login-input" placeholder="Confirm Password" name="ConfirmPassword" required/>

            <!-- Error Message (optional) -->
            @if (ViewBag.ErrorMessage != null)
            {
                <div class="error-message">
                    @ViewBag.ErrorMessage
                </div>
            }

            <!-- Register Button -->
            <button type="submit" class="login-button">Register</button>
        }

        <!-- Redirect Links -->
        <a href="@Url.Action("Login", "Wordle")" class="login-link">Already have an account? Login</a>
    </div>
</div>

<!-- Web Component Script -->
<script>
    class ThemeSwitcher extends HTMLElement {
        connectedCallback() {
            // Create the toggle slider
            const slider = document.createElement('label');
            slider.classList.add('switch');

            // Create the slider input
            const input = document.createElement('input');
            input.type = 'checkbox';
            input.addEventListener('change', this.toggleTheme);

            // Create the slider span (track and thumb)
            const span = document.createElement('span');
            span.classList.add('slider');

            slider.appendChild(input);
            slider.appendChild(span);

            // Append the slider to the body
            document.body.appendChild(slider);
        }

        toggleTheme(event) {
            // Toggle dark mode based on the slider's checked state
            if (event.target.checked) {
                document.body.classList.add('dark-mode');
            } else {
                document.body.classList.remove('dark-mode');
            }
        }
    }

    customElements.define('theme-switcher', ThemeSwitcher);
</script>

<style>
    .dark-mode {
        background-color: #2c2c2c;
        color: white;
    }

    .dark-mode .login-container {
        background-color: #333;
    }

    .dark-mode .login-input {
        background-color: #555;
        color: white;
    }

    .dark-mode .login-button {
        background-color: #4CAF50;
        color: white;
    }

    .dark-mode .error-message {
        color: red;
    }

    /* Styling the slider switch */
    .switch {
        position: absolute;
        top: 10px;
        right: 10px;
        display: inline-block;
        width: 34px;
        height: 20px;
    }

    .switch input {
        opacity: 0;
        width: 0;
        height: 0;
    }

    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        transition: .4s;
        border-radius: 34px;
    }

    .slider:before {
        position: absolute;
        content: "";
        height: 12px;
        width: 12px;
        border-radius: 50%;
        left: 4px;
        bottom: 4px;
        background-color: white;
        transition: .4s;
    }

    input:checked + .slider {
        background-color: #4CAF50;
    }

    input:checked + .slider:before {
        transform: translateX(14px);
    }
</style>

</body>
</html>